#Использовать ".."
#Использовать asserts


Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
    ВсеТесты = Новый Массив;    
    ВсеТесты.Добавить("ТестДолжен_ПроверитьЧтоВозвращаетсяСтрока");
    ВсеТесты.Добавить("ТестДолжен_ПроверитьЧтоВозвращаетсяМассив");
    ВсеТесты.Добавить("ТестДолжен_ПроверитьЧтоТаблицаСОздается");
    ВсеТесты.Добавить("ТестДолжен_ПроверитьЧтоТаблицаЗаполнена");
    ВсеТесты.Добавить("ТестДолжен_ПроверитьЧтоСоздаетсяПрокси");
    ВсеТесты.Добавить("ТестДолжен_ПроверитьЧтоПроксиРаботает");
    ВсеТесты.Добавить("ТестДолжен_ПроверитьЧтоПользователюВозвращаетсяТЗ");
    ВсеТесты.Добавить("ТестДолжен_ПроверитьЧтоРандомныйПроксиРаботает");
 
    Возврат ВсеТесты;
КонецФункции
 
Процедура ПередЗапускомТеста() Экспорт
КонецПроцедуры
 
Процедура ПослеЗапускаТеста() Экспорт
КонецПроцедуры

Процедура ТестДолжен_ПроверитьЧтоВозвращаетсяСтрока() Экспорт
    Результат = ГенераторПрокси.ОбращениеАПИ();
    Ожидаем.Что(Результат, "Ожидаем, что вернется строка").ИмеетТип("Строка");
КонецПроцедуры

Процедура ТестДолжен_ПроверитьЧтоВозвращаетсяМассив() Экспорт
    Результат = ГенераторПрокси.ОбработкаРезультатаИзJSON();
    Ожидаем.Что(Результат, "Ожидаем, что вернется массив").ИмеетТип("Массив");
КонецПроцедуры

Процедура ТестДолжен_ПроверитьЧтоТаблицаСОздается() Экспорт
    Результат = ГенераторПрокси.СоздатьТаблицуЗначений();
    Ожидаем.Что(Результат, "Ожидаем, что таблица создается").Существует();
КонецПроцедуры

Процедура ТестДолжен_ПроверитьЧтоТаблицаЗаполнена() Экспорт
    Результат = ГенераторПрокси.ДанныеОПроксиВТЗ();
    Ожидаем.Что(Результат, "Ожидаем, что таблица заполнена").Заполнено();
    Ожидаем.Что(Результат.Количество(), "Ожидаем, что таблица имеет минимум одну строку").Минимум(1);
КонецПроцедуры

Процедура ТестДолжен_ПроверитьЧтоСоздаетсяПрокси() Экспорт
    Результат = ПолучитьПрокси.ПоНомеру(1);
    Ожидаем.Что(Результат, "Ожидаем, что возвращается интернет прокси").Существует();
КонецПроцедуры

Процедура ТестДолжен_ПроверитьЧтоПроксиРаботает() Экспорт
    
    ИмяСервера = "https://api.telegram.org";
	URL = "/bot986932288:AAHM-eQkaS4_jnidq_qRgKX6oAl6mUv9F_I/getMe";
    HTTPЗапрос = Новый HTTPЗапрос(URL);
    КодСостоянияСоединения = 301;
    КоличествоПопытокПодключения = 0;
    
    Пока ((КодСостоянияСоединения > 300) И (КоличествоПопытокПодключения < 25)) Цикл	
		Попытка
            Прокси = ПолучитьПрокси.ПоНомеру(КоличествоПопытокПодключения);
            HTTP = Новый HTTPСоединение(ИмяСервера,443,,,Прокси,3);
			ОтветHTTP = HTTP.Получить(HTTPЗапрос);
            КодСостоянияСоединения = ОтветHTTP.КодСостояния;
            КоличествоПопытокПодключения = КоличествоПопытокПодключения + 1;
        Исключение
            Приостановить(2);
            КоличествоПопытокПодключения = КоличествоПопытокПодключения + 1;
        КонецПопытки;
	КонецЦикла;

    Ожидаем.Что(КодСостоянияСоединения, "Ожидаем, что прокси работает и заблокированный ресурс становится доступен").Равно(200);

КонецПроцедуры

Процедура ТестДолжен_ПроверитьЧтоПользователюВозвращаетсяТЗ() Экспорт

    Результат = ПолучитьПрокси.ТаблицаЗначений();
    Ожидаем.Что(Результат, "Ожидаем, что вернется заполненная таблица значений").Заполнено();
    Ожидаем.Что(Результат.Количество(), "Ожидаем, что вернется заполненная таблица значений").Минимум(1);

КонецПроцедуры

Процедура ТестДолжен_ПроверитьЧтоРандомныйПроксиРаботает() Экспорт

    ИмяСервера = "https://api.telegram.org";
	URL = "/bot986932288:AAHM-eQkaS4_jnidq_qRgKX6oAl6mUv9F_I/getMe";
    HTTPЗапрос = Новый HTTPЗапрос(URL);
    КодСостоянияСоединения = 301;
    КоличествоПопытокПодключения = 0;
    
    Пока ((КодСостоянияСоединения > 300) И (КоличествоПопытокПодключения < 25)) Цикл	
		Попытка
            Прокси = ПолучитьПрокси.Случайный();
            HTTP = Новый HTTPСоединение(ИмяСервера,443,,,Прокси,3);
			ОтветHTTP = HTTP.Получить(HTTPЗапрос);
            КодСостоянияСоединения = ОтветHTTP.КодСостояния;
            КоличествоПопытокПодключения = КоличествоПопытокПодключения + 1;
        Исключение
            Приостановить(2);
            КоличествоПопытокПодключения = КоличествоПопытокПодключения + 1;
        КонецПопытки;
	КонецЦикла;

    Ожидаем.Что(КодСостоянияСоединения, "Ожидаем, что прокси работает и заблокированный ресурс становится доступен").Равно(200);

КонецПроцедуры

